{"remainingRequest":"c:\\Users\\qwe\\Desktop\\lanzeyigou-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\Users\\qwe\\Desktop\\lanzeyigou-master\\src\\components\\aliyun copy.vue?vue&type=script&lang=js&","dependencies":[{"path":"c:\\Users\\qwe\\Desktop\\lanzeyigou-master\\src\\components\\aliyun copy.vue","mtime":1568255505000},{"path":"c:\\Users\\qwe\\Desktop\\lanzeyigou-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\Users\\qwe\\Desktop\\lanzeyigou-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"c:\\Users\\qwe\\Desktop\\lanzeyigou-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\Users\\qwe\\Desktop\\lanzeyigou-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { client , getFileNameUUID  } from \"../assets/aliyun_oss.js\"; //前面的ali-js文件内的两个封装函数\n// import { getAliOSSConfig } from \"@/api/admin\";  //请求后台的接口拿Ali-OSS数据\nexport default {\n  name: \"Upload\",\n  props: {\n    limit: {\n      type: Number,\n      default: 1\n    }\n  },\n  data() {\n    return {\n      fileList: [],//文件列\n      showProgress: false,//进度条的显示\n      dataObj: {}, //存签名信息\n      progress: 0 //进度条数据\n    };\n  },\n  methods: {\n    // 文件超出个数限制时的钩子\n    handleExceed(files, fileList) {\n      this.$message.warning(`每次只能上传 ${this.limit} 个文件`);\n    },\n    // 点击文件列表中已上传的文件时的钩子\n    handlePreview(file) {},\n    // 删除文件之前的钩子\n    beforeRemove(file, fileList) {\n      return this.$confirm(`确定移除 ${file.name}？`);\n    },\n    // 文件列表移除文件时的钩子\n    handleRemove(file, fileList) {},\n    // 文件上传成功时的钩子\n    handleSuccess(response, file, fileList) {\n      this.fileList = fileList;\n    },\n    //文件上传前的校验\n    beforeAvatarUpload(file) {\n      const isLt100M =\n        file.size / 1024 / 1024 > 10 && file.size / 1024 / 1024 < 1024;\n      const isLt30 = file.name.length < 30;\n      if ([\"video/mp4\"].indexOf(file.type) !== -1) {\n        this.$message.error(\"请上传正确的视频格式\");\n        return false;\n      }\n      if (isLt100M) {\n        this.$message.error(\"上传视频大小要在10MB~1GB之间哦!\");\n        return false;\n      }\n      if (!isLt30) {\n        this.$message.error(\"上传视频文件名称长度必须要小于30个文字哦!\");\n        return false;\n      }\n\t  // 请求后台接口拿配置参数\n      return new Promise((resolve, reject) => {\n        getAliOSSConfig()\n          .then(response => {\n            this.dataObj = response.data; //接口返回配置参数\n            console.log(response.data);\n            resolve(true);\n          })\n          .catch(err => {\n            console.log(err);\n            reject(false);\n          });\n      });\n    },\n    // http-request属性来覆盖默认的上传行为（即action=\"url\"），自定义上传的实现 \n    Upload(file) {\n      const that = this;\n      async function multipartUpload() {\n        let temporary = file.file.name.lastIndexOf(\".\");\n        let fileNameLength = file.file.name.length;\n        let fileFormat = file.file.name.substring(\n          temporary + 1,\n          fileNameLength\n        );\n        let fileName = getFileNameUUID() + \".\" + fileFormat; \n        client(that.dataObj)\n          .multipartUpload(`videoTest/${fileName}`, file.file, {\n            progress: function(p) {\n              //p进度条的值\n              console.log(p);\n              that.showProgress = true;\n              that.progress = Math.floor(p * 100);\n            }\n          })\n          .then(result => {\n            //上传成功返回值，可针对项目需求写其他逻辑\n            console.log(result);\n          })\n          .catch(err => {\n            console.log(\"err:\", err);\n          });\n      }\n      multipartUpload();\n    }\n  }\n};\n",{"version":3,"sources":["aliyun copy.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"aliyun copy.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"content\">\n    <el-upload\n      action\n      :http-request=\"Upload\"\n      :before-upload=\"beforeAvatarUpload\"\n      :on-preview=\"handlePreview\"\n      :before-remove=\"beforeRemove\"\n      :on-remove=\"handleRemove\"\n      :on-success=\"handleSuccess\"\n      :on-exceed=\"handleExceed\"\n      drag\n      :limit=\"5\"\n      :file-list=\"fileList\"\n    >\n      <i class=\"el-icon-upload\"></i>\n      <div class=\"el-upload__text\">\n        将文件拖到此处，或\n        <em>点击上传</em>\n      </div>\n      <div slot=\"tip\" class=\"el-upload__tip\">上传文件大小不能超过 1G</div>\n    </el-upload>\n\n    <el-progress\n      v-show=\"showProgress\"\n      :text-inside=\"true\"\n      :stroke-width=\"15\"\n      :percentage=\"progress\"\n    ></el-progress>\n  </div>\n</template>\n<script>\nimport { client , getFileNameUUID  } from \"../assets/aliyun_oss.js\"; //前面的ali-js文件内的两个封装函数\n// import { getAliOSSConfig } from \"@/api/admin\";  //请求后台的接口拿Ali-OSS数据\nexport default {\n  name: \"Upload\",\n  props: {\n    limit: {\n      type: Number,\n      default: 1\n    }\n  },\n  data() {\n    return {\n      fileList: [],//文件列\n      showProgress: false,//进度条的显示\n      dataObj: {}, //存签名信息\n      progress: 0 //进度条数据\n    };\n  },\n  methods: {\n    // 文件超出个数限制时的钩子\n    handleExceed(files, fileList) {\n      this.$message.warning(`每次只能上传 ${this.limit} 个文件`);\n    },\n    // 点击文件列表中已上传的文件时的钩子\n    handlePreview(file) {},\n    // 删除文件之前的钩子\n    beforeRemove(file, fileList) {\n      return this.$confirm(`确定移除 ${file.name}？`);\n    },\n    // 文件列表移除文件时的钩子\n    handleRemove(file, fileList) {},\n    // 文件上传成功时的钩子\n    handleSuccess(response, file, fileList) {\n      this.fileList = fileList;\n    },\n    //文件上传前的校验\n    beforeAvatarUpload(file) {\n      const isLt100M =\n        file.size / 1024 / 1024 > 10 && file.size / 1024 / 1024 < 1024;\n      const isLt30 = file.name.length < 30;\n      if ([\"video/mp4\"].indexOf(file.type) !== -1) {\n        this.$message.error(\"请上传正确的视频格式\");\n        return false;\n      }\n      if (isLt100M) {\n        this.$message.error(\"上传视频大小要在10MB~1GB之间哦!\");\n        return false;\n      }\n      if (!isLt30) {\n        this.$message.error(\"上传视频文件名称长度必须要小于30个文字哦!\");\n        return false;\n      }\n\t  // 请求后台接口拿配置参数\n      return new Promise((resolve, reject) => {\n        getAliOSSConfig()\n          .then(response => {\n            this.dataObj = response.data; //接口返回配置参数\n            console.log(response.data);\n            resolve(true);\n          })\n          .catch(err => {\n            console.log(err);\n            reject(false);\n          });\n      });\n    },\n    // http-request属性来覆盖默认的上传行为（即action=\"url\"），自定义上传的实现 \n    Upload(file) {\n      const that = this;\n      async function multipartUpload() {\n        let temporary = file.file.name.lastIndexOf(\".\");\n        let fileNameLength = file.file.name.length;\n        let fileFormat = file.file.name.substring(\n          temporary + 1,\n          fileNameLength\n        );\n        let fileName = getFileNameUUID() + \".\" + fileFormat; \n        client(that.dataObj)\n          .multipartUpload(`videoTest/${fileName}`, file.file, {\n            progress: function(p) {\n              //p进度条的值\n              console.log(p);\n              that.showProgress = true;\n              that.progress = Math.floor(p * 100);\n            }\n          })\n          .then(result => {\n            //上传成功返回值，可针对项目需求写其他逻辑\n            console.log(result);\n          })\n          .catch(err => {\n            console.log(\"err:\", err);\n          });\n      }\n      multipartUpload();\n    }\n  }\n};\n</script>"]}]}