{"remainingRequest":"C:\\Users\\simplett\\Desktop\\lanzeyigou\\lanzeyigou\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\simplett\\Desktop\\lanzeyigou\\lanzeyigou\\src\\components\\aliyun copy.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\simplett\\Desktop\\lanzeyigou\\lanzeyigou\\src\\components\\aliyun copy.vue","mtime":1569293426513},{"path":"C:\\Users\\simplett\\Desktop\\lanzeyigou\\lanzeyigou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568767580909},{"path":"C:\\Users\\simplett\\Desktop\\lanzeyigou\\lanzeyigou\\node_modules\\babel-loader\\lib\\index.js","mtime":1568767579596},{"path":"C:\\Users\\simplett\\Desktop\\lanzeyigou\\lanzeyigou\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568767580909},{"path":"C:\\Users\\simplett\\Desktop\\lanzeyigou\\lanzeyigou\\node_modules\\vue-loader\\lib\\index.js","mtime":1568767606597}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// import UploadFileApi from '@/api/system/UploadFileApi'\nimport OSS from 'ali-oss'\r\nlet oss = require('ali-oss');\nvar client = oss({\n  accessKeyId: 'your access key',\n  accessKeySecret: 'your access secret',\n  bucket: 'your bucket name',\n  region: 'oss-cn-hangzhou'\n});\r\nlet result = client.multipartUpload('object-key', 'local-file', {\n    progress: async function (p) {\n      console.log('Progress: ' + p);\n    }\n  });\nexport default {\n  name: 'fileUpload',\n  props: {\n    data_extra: {\n      type: Object,\n      required: true\n    },\n    accept: {\n      type: Array,\n      required: true\n    }\n  },\n  data () {\n    return {\n      uploadUrl: '',\n      fileList: [],\n      files: 10,\n      uploadHeaders: {\n        authorization: ''\n      },\n      disabled: false\n    }\n  },\n  methods: {\n    /**\n     * @description [fnUploadRequest 覆盖默认的上传行为，实现自定义上传]\n     * @author   shanshuizinong\n     * @param    {object}   option [上传选项]\n     * @return   {null}   [没有返回]\n     */\n    async fnUploadRequest (option) {\n      try {\n        let vm = this\n        vm.disabled = true\n        // 获取OSS配置信息\n        let uploadFileApi = new UploadFileApi()\n        let ret = await uploadFileApi.fileOssParams()\n        if (!(ret.data && ret.data.code === '0' && ret.data.data)) {\n          throw new Error('获取OSS参数失败')\n        }\n        let ossData = JSON.parse(ret.data.data)\n        let relativePath = ossData.relativePath\n        let client = new OSS.Wrapper({\n          policy: ossData.policy,\n          accessKeyId: ossData.accessid,\n          accessKeySecret: ossData.accesssecret,\n          bucket: ossData.bucket,\n          signature: ossData.signature\n        })\n        let file = option.file\n        const point = file.name.lastIndexOf('.')\n        let suffix = file.name.substr(point)\n        let fileName = file.name.substr(0, point)\n        let date = vm.$moment().format('YYYYMMDDHHmm')\n        let fileNames = `${fileName}_${date}${suffix}`\n        // 分片上传文件\n        ret = await client.multipartUpload(relativePath + fileNames, file, {\n          progress: async function (p) {\n            let e = {}\n            e.percent = p * 100\n            option.onProgress(e)\n          }\n        })\n        console.log(ret)\n        if (ret.res.statusCode === 200) {\n          // option.onSuccess(ret)\n          return ret\n        } else {\n          vm.disabled = false\n          option.onError('上传失败')\n        }\n      } catch (error) {\n        console.error(error)\n        this.disabled = false\n        option.onError('上传失败')\n        this.$error(error.message)\n      }\n    },\n    /**\n     * @description [fnUploadSuccess 文件上传成功的函数]\n     * @author   shanshuizinong\n     * @return   {null}  [没有返回]\n     */\n    async fnUploadSuccess () {\n      // TODO\n    }\n  }\n}\n",{"version":3,"sources":["aliyun copy.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"aliyun copy.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <el-upload\n      :auto-upload=\"false\"\n      :action=\"uploadUrl\"\n      ref=\"upload\"\n      :before-upload=\"fnBeforeUpload\"\n      :on-success=\"fnUploadSuccess\"\n      :on-exceed=\"fnUploadExceed\"\n      :data=\"data_extra\"\n      :headers=\"uploadHeaders\"\n      :http-request=\"fnUploadRequest\"\n      drag\n      :limit=\"files\"\n      :disabled=\"disabled\"\n      multiple>\n      <i class=\"el-icon-upload\"></i>\n      <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n      <div slot=\"tip\" class=\"el-upload__tip\">上传文件大小不能超过 1G</div>\n    </el-upload>\n  </div>\n</template>\n<script>\n// import UploadFileApi from '@/api/system/UploadFileApi'\nimport OSS from 'ali-oss'\r\nlet oss = require('ali-oss');\nvar client = oss({\n  accessKeyId: 'your access key',\n  accessKeySecret: 'your access secret',\n  bucket: 'your bucket name',\n  region: 'oss-cn-hangzhou'\n});\r\nlet result = client.multipartUpload('object-key', 'local-file', {\n    progress: async function (p) {\n      console.log('Progress: ' + p);\n    }\n  });\nexport default {\n  name: 'fileUpload',\n  props: {\n    data_extra: {\n      type: Object,\n      required: true\n    },\n    accept: {\n      type: Array,\n      required: true\n    }\n  },\n  data () {\n    return {\n      uploadUrl: '',\n      fileList: [],\n      files: 10,\n      uploadHeaders: {\n        authorization: ''\n      },\n      disabled: false\n    }\n  },\n  methods: {\n    /**\n     * @description [fnUploadRequest 覆盖默认的上传行为，实现自定义上传]\n     * @author   shanshuizinong\n     * @param    {object}   option [上传选项]\n     * @return   {null}   [没有返回]\n     */\n    async fnUploadRequest (option) {\n      try {\n        let vm = this\n        vm.disabled = true\n        // 获取OSS配置信息\n        let uploadFileApi = new UploadFileApi()\n        let ret = await uploadFileApi.fileOssParams()\n        if (!(ret.data && ret.data.code === '0' && ret.data.data)) {\n          throw new Error('获取OSS参数失败')\n        }\n        let ossData = JSON.parse(ret.data.data)\n        let relativePath = ossData.relativePath\n        let client = new OSS.Wrapper({\n          policy: ossData.policy,\n          accessKeyId: ossData.accessid,\n          accessKeySecret: ossData.accesssecret,\n          bucket: ossData.bucket,\n          signature: ossData.signature\n        })\n        let file = option.file\n        const point = file.name.lastIndexOf('.')\n        let suffix = file.name.substr(point)\n        let fileName = file.name.substr(0, point)\n        let date = vm.$moment().format('YYYYMMDDHHmm')\n        let fileNames = `${fileName}_${date}${suffix}`\n        // 分片上传文件\n        ret = await client.multipartUpload(relativePath + fileNames, file, {\n          progress: async function (p) {\n            let e = {}\n            e.percent = p * 100\n            option.onProgress(e)\n          }\n        })\n        console.log(ret)\n        if (ret.res.statusCode === 200) {\n          // option.onSuccess(ret)\n          return ret\n        } else {\n          vm.disabled = false\n          option.onError('上传失败')\n        }\n      } catch (error) {\n        console.error(error)\n        this.disabled = false\n        option.onError('上传失败')\n        this.$error(error.message)\n      }\n    },\n    /**\n     * @description [fnUploadSuccess 文件上传成功的函数]\n     * @author   shanshuizinong\n     * @return   {null}  [没有返回]\n     */\n    async fnUploadSuccess () {\n      // TODO\n    }\n  }\n}\n</script>\n\n"]}]}